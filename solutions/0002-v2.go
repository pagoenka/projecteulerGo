//https://projecteuler.net/problem=2
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//1 1 2 3 5 8 13 21 34 55 89 144 ...
//a b c a b c a b c a b c
//It is easy to prove that every third Fibonacci number is even

package main

import (
    "fmt"
    "strconv"
)

func main() {
    sum := fibEvenSumV2()
    fmt.Println("Sum is " + strconv.Itoa(sum)) //Sum is 4613732
}

func fibEvenSumV2() int {
    first := 1
    second := 1
    third := first + second
    sum := 0
    for third <= 4000000 {
        sum = sum + third
        first = second + third
        second = first + third
        third = first + second
    }
    return sum
}
